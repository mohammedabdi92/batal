<?php
namespace common\models;

use common\components\CustomFunc;
use Yii;
use yii\base\NotSupportedException;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\web\IdentityInterface;

/**
 * User model
 *
 * @property integer $id
 * @property string $username
 * @property string $password_hash
 * @property string $phone_number
 * @property string $reg_code
 * @property string $email
 * @property integer $status
 * @property integer $group_id
 * @property integer $created_at
 * @property integer $updated_at
 */
class RegisterRequest extends ActiveRecord
{
    public $password;
    const STATUS_DELETED = 0;
    const STATUS_PENDING = 3;
    const STATUS_ACTIVE = 5;
    const STATUS_APPROVE = 10;
    const statusArray = [
        self::STATUS_DELETED=>"تم رفضه",
        self::STATUS_PENDING=>"غير مفعل",
        self::STATUS_ACTIVE=>"بالانتظار",
        self::STATUS_APPROVE=>"تم قبوله",
    ];
    public  function getStatusText(){
        return self::statusArray[$this->status];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%register_request}}';
    }
    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'الرقم'),
            'status' => Yii::t('app', 'الحالة'),
            'username' => Yii::t('app', 'اسم المستخدم'),
            'phone_number' => Yii::t('app', 'رقم التلفون'),
            'reg_code' => Yii::t('app', 'كود التحقق'),
            'email' => Yii::t('app', 'الايميل'),
            'group_id' => Yii::t('app', 'الفئة'),
            'password' => Yii::t('app', 'باسورد'),
            'created_at' => Yii::t('app', 'وقت تقديم الطلب'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    /**
      * @inheritdoc
      */
    public function rules()
    {
        return [
            [['username','email'], 'required'],
            [['email' ], 'unique'],
            [['email' ], 'email'],
            [['email' ], 'validEmail'],
            [['phone_number','group_id'],'safe'],
            [['password'], 'required','on'=>"create"],
            ['status', 'default', 'value' => self::STATUS_PENDING],
        ];
    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord)
        {
            $this->setPassword();


        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function validEmail($attr, $params){
        $user = User::findByEmail($this->email);
        if($user)
        {
            $this->addError($attr, Yii::t('app', 'البريد الالكتروني "'.$this->email.'" موجود بالفعل'));
        }
    }

    /**
     * @inheritdoc
     */
    public static function findIdentity($id)
    {
        return static::findOne(['id' => $id, 'status' => self::STATUS_ACTIVE]);
    }

    /**
     * Finds user by username
     *
     * @param string $username
     * @return static|null
     */
    public static function findByUsername($username)
    {
        return static::findOne(['username' => $username, 'status' => self::STATUS_ACTIVE]);
    }
    /**
     * Finds user by email
     *
     * @param string $email
     * @return static|null
     */
    public static function findByEmail($email)
    {
        return static::findOne(['email' => $email, 'status' => self::STATUS_ACTIVE]);
    }


    /**
     * @inheritdoc
     */
    public function getId()
    {
        return $this->getPrimaryKey();
    }
    /**
     * Validates password
     *
     * @param string $password password to validate
     * @return boolean if password provided is valid for current user
     */
    public function validatePassword()
    {
        return Yii::$app->security->validatePassword($this->password, $this->password_hash);
    }

    /**
     * Generates password hash from password and sets it to the model
     *
     * @param string $password
     */
    public function setPassword()
    {
        $this->password_hash = Yii::$app->security->generatePasswordHash($this->password);
    }

    public function generateCode()
    {
       return $this->reg_code = CustomFunc::getRandomString(4, true);//'9512';
    }
    public function reSendOtp()
    {
        $this->generateCode();
        $this->save(false);
        return $this->sendOtp();
    }

    public function sendOtp(){
        return Yii::$app->mailer->compose()
            ->setTo($this->email)
            ->setFrom("info@mohammedabadi.com")
            ->setSubject('تاكيد طلب التسجيل')
            ->setTextBody('الكود الخاص بك هو :-'.$this->reg_code)
            ->setHtmlBody('الكود الخاص بك هو :- '.$this->reg_code)
            ->send();
    }
}
